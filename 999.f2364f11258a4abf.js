"use strict";(self.webpackChunkDocumentation=self.webpackChunkDocumentation||[]).push([[999],{999:(f,s,a)=>{a.r(s),a.d(s,{AngularModule:()=>d});var p=a(814),r=a(225),e=a(946);function c(t,o){if(1&t){const n=e.EpF();e.TgZ(0,"li",6),e.NdJ("click",function(){const g=e.CHM(n).$implicit,h=e.oxw();return e.KtG(h.activeClass(g))}),e._uU(1),e.qZA()}if(2&t){const n=o.$implicit,i=o.index,l=e.oxw();e.ekj("active",l.classActive==n.name),e.s9C("routerLink",n.url),e.xp6(1),e.AsE("",i+1,". ",n.name,"")}}const u=[{path:"",component:(()=>{class t{constructor(){this.classActive="Data Binding",this.snippetUrl="data-binding",this.playList=[{name:"Data Binding",url:"data-binding"},{name:"Interpolation",url:"interpolation"},{name:"Property Binding",url:"property-binding"},{name:"Class and Style Binding",url:"style-binding"},{name:"Event Binding",url:"event-binding"},{name:"Two Way Data Binding",url:"two-way-binding"},{name:"Ngif, Else and Then",url:"ngif"},{name:"NgSwicth",url:"ngswitch"},{name:"ngFor",url:"ngfor"},{name:"Routing",url:"routing"},{name:"Input & Output",url:"input-output"},{name:"Component Lifecycle Hook",url:"component-lifecycle-hook"},{name:"Viewchild",url:"viewchild"},{name:"Renderer",url:"renderer"},{name:"Pipes",url:"pipes"},{name:"Template Driven Form",url:"template-driven-form"},{name:"Reactive Form",url:"reactive-form"},{name:"Modules",url:"modules"},{name:"Lazy Loading",url:"lazy-loading"}]}ngOnInit(){this.classActive=sessionStorage.getItem("classActive")}activeClass(n){this.classActive=n.name,this.snippetUrl=n.url,sessionStorage.setItem("classActive",this.classActive)}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-angular"]],decls:9,vars:1,consts:[[1,"angular"],[1,"leftSection"],[1,"codeSnippets"],[1,"rightSection"],[1,"topicList"],[3,"active","routerLink","click",4,"ngFor","ngForOf"],[3,"routerLink","click"]],template:function(n,i){1&n&&(e.TgZ(0,"section",0)(1,"div",1)(2,"div",2),e._UZ(3,"router-outlet"),e.qZA()(),e.TgZ(4,"div",3)(5,"h2"),e._uU(6,"Angular Topics:"),e.qZA(),e.TgZ(7,"ul",4),e.YNc(8,c,2,5,"li",5),e.qZA()()()),2&n&&(e.xp6(8),e.Q6J("ngForOf",i.playList))},dependencies:[p.sg,r.lC,r.rH]}),t})(),children:[{path:"",pathMatch:"full",redirectTo:"data-binding"},{path:"data-binding",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-data-binding"]],decls:21,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/3FK4d285HbdZ1KIYOvu1","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Data Binding"),e.qZA(),e.TgZ(3,"p"),e._uU(4,"Data binding is a way to connect the data in a component or controller with the view or template in web development. It allows us to display and update data dynamically on the screen. There are different types of data binding:"),e.qZA(),e.TgZ(5,"ol")(6,"li")(7,"strong"),e._uU(8," One-way Binding:"),e.qZA(),e.TgZ(9,"ol")(10,"li")(11,"strong"),e._uU(12," Component to View:"),e.qZA(),e._uU(13," We can display data from the component in the view using different methods like inserting values within curly braces or setting properties, styles, classes, or attributes of elements based on the component data."),e.qZA(),e.TgZ(14,"li")(15,"strong"),e._uU(16,"View to Component:"),e.qZA(),e._uU(17," We can bind events in the view to methods or functions in the component, so when a user interacts with the view, it triggers actions in the component."),e.qZA()()()()(),e.TgZ(18,"h2"),e._uU(19,"Example:"),e.qZA(),e._UZ(20,"iframe",2))}}),t})()},{path:"interpolation",component:(()=>{class t{constructor(){this.value="{{value}}",this.propertyName="{{propertyName}}"}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-interpolation"]],decls:16,vars:2,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/7KzYIlVPcKep4qyuZeHK?open=app%2Fapp.component.html","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Interpolation"),e.qZA(),e.TgZ(3,"ol")(4,"li"),e._uU(5,"Interpolation binds the data one-way. This means that when a value of the field bond using Interpolation changes, it is updated in the page as well. It cannot change the value of the field"),e.qZA(),e.TgZ(6,"li"),e._uU(7,"The format for defining interpolation in a template is: "),e.TgZ(8,"strong"),e._uU(9),e.qZA()(),e.TgZ(10,"li"),e._uU(11,"component ------ "),e.TgZ(12,"strong"),e._uU(13),e.qZA(),e._uU(14," ---------\x3e Dom"),e.qZA()()(),e._UZ(15,"iframe",2)),2&n&&(e.xp6(9),e.hij(" ",i.propertyName,""),e.xp6(4),e.Oqu(i.value))}}),t})()},{path:"property-binding",component:(()=>{class t{constructor(){this.title="title"}}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-property-binding"]],decls:23,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/0XADT7eFRQkXqCa7dier","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Property Binding"),e.qZA(),e.TgZ(3,"ol")(4,"li"),e._uU(5,"It is used to bind values of component/model properties to the HTML element."),e.qZA(),e.TgZ(6,"li"),e._uU(7,"Depending on the values, it will change the existing behavior of the element."),e.qZA(),e.TgZ(8,"li")(9,"strong"),e._uU(10," Syntax - [property]='expression'"),e.qZA()(),e.TgZ(11,"li"),e._uU(12,"In property binding, there is source and target. For this example, we can define it as [innerHTML]='firstname'. Here, innerHTML is a target is a property of span tag and source is a component property i.e. firstname"),e.qZA()(),e.TgZ(13,"span"),e._uU(14," in .ts file "),e._UZ(15,"br"),e._uU(16,' title="Hello World"; '),e._UZ(17,"br")(18,"br"),e._uU(19," in .html file "),e._UZ(20,"br"),e._uU(21,' <span [innerHTML]="title"><span> '),e.qZA()(),e._UZ(22,"iframe",2))}}),t})()},{path:"style-binding",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-style-binding"]],decls:12,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/4xJ6MyLpRFlan5CEqCbD","frameborder","0","width","100%","height","500px"],["src","https://ng-run.com/edit/9v4gC78tuDjYkA0q9otZ","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2," Class Binding "),e.qZA(),e.TgZ(3,"p"),e._uU(4," Class binding allows you to conditionally apply CSS classes to an element based on the state of your component. You can bind a class to an expression that evaluates to either true or false. If the expression is true, the specified CSS class will be applied to the element; otherwise, it will be removed. "),e.qZA()(),e._UZ(5,"iframe",2),e.TgZ(6,"div",0)(7,"h2",1),e._uU(8,"Style Binding"),e.qZA(),e.TgZ(9,"p"),e._uU(10," Style binding allows you to dynamically set inline styles on an element based on component properties or expressions. You can bind a style property to an expression that evaluates to a value or an object representing multiple style properties. "),e.qZA()(),e._UZ(11,"iframe",3))}}),t})()},{path:"event-binding",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-event-binding"]],decls:7,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/WYVtmkEQjMnNIfAhQz6G","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Event Binding"),e.qZA(),e._uU(3," Event binding allows you to respond to user interactions or events that occur in your application, such as button clicks, mouse movements, key presses, and more. By using event binding, you can associate a specific event with a method or function in your component that will be executed when the event occurs. "),e.TgZ(4,"p"),e._uU(5,"Here's an example of how to use event binding in Angular:"),e.qZA()(),e._UZ(6,"iframe",2))}}),t})()},{path:"two-way-binding",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-two-way-binding"]],decls:14,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/EEqWYMBFq9G99FiAnZ8T","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Two Way Data Binding"),e.qZA(),e.TgZ(3,"p"),e._uU(4," The most popular and widely used data binding mechanism is two-way binding in the angular framework. Basically two-way binding mainly used in the input type field or any form element where user type or provide any value or change any control value in the one side, and on the other side, the same automatically updated in to the controller variables and vice versa. "),e.qZA(),e.TgZ(5,"p"),e._uU(6," In simple words, two-way data binding is a combination of both Property Binding and Event Binding. <input [value]='data1' (input)='data=$event.target.value'> "),e.qZA(),e.TgZ(7,"p"),e._uU(8," Binding using [(ngModel)] directive "),e.qZA(),e.TgZ(9,"p"),e._uU(10," ngModel directive which combines the square brackets of property binding with the parentheses of event binding in a single notation. "),e.qZA(),e.TgZ(11,"p"),e._uU(12," <input [(ngModel)]='data'> "),e.qZA()(),e._UZ(13,"iframe",2))}}),t})()},{path:"ngif",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-ngif"]],decls:14,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/NwahGZIU2pLova6bQjXG","frameborder","0","width","100%","height","500px"],["src","https://ng-run.com/edit/WvsbW6BD3OXCaH6m6Iq8","frameborder","0","width","100%","height","500px"],["src","https://ng-run.com/edit/aLqs3a9x4YMkBSBiO9T5","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2," NgIf, Else and Then "),e.qZA(),e.TgZ(3,"p"),e._uU(4," The *ngIf directive is used for conditional rendering. It allows you to conditionally show or hide elements in your templates based on a certain expression. "),e.qZA()(),e.TgZ(5,"strong"),e._uU(6,"Here's an example of how to use *ngIf:"),e.qZA(),e._UZ(7,"iframe",2),e.TgZ(8,"strong"),e._uU(9,"Here's an example of how to use *ngIfElse:"),e.qZA(),e._UZ(10,"iframe",3),e.TgZ(11,"strong"),e._uU(12,"Here's an example of how to use *ngIfElse and then:"),e.qZA(),e._UZ(13,"iframe",4))}}),t})()},{path:"ngswitch",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-ngswitch"]],decls:41,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/g4OS9RA6Y7ct7wtkS1wl","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"ngSwitch"),e.qZA(),e.TgZ(3,"ol")(4,"li"),e._uU(5," ngSwitch is actually comprised of two directives, and atttribute directive and a structural directive. It's very similar to a switch statement in Javascript and other programming languages, but in the template. "),e.qZA(),e.TgZ(6,"li"),e._uU(7," The ng-switch directive lets you hide/show HTML elements depending on an expression. "),e.qZA(),e.TgZ(8,"li"),e._uU(9," We can also define a default section, by using the ng-switch-default directive, to show a section if none of the other sections get a match. "),e.qZA(),e.TgZ(10,"li"),e._uU(11," Three things to keep in mind - ngSwitch, ngSwitch, ngSwitchDefault "),e.qZA()(),e.TgZ(12,"p"),e._uU(13,' <select (change)="fun($event)"> '),e._UZ(14,"br"),e._uU(15,' <option value="fridge">fridge</option> '),e._UZ(16,"br"),e._uU(17,' >option value="TV">TV</option> '),e._UZ(18,"br"),e._uU(19," </select> "),e.qZA(),e.TgZ(20,"p"),e._uU(21,' <div [ngSwitch]="choose"> '),e._UZ(22,"br"),e._uU(23," <h3 *ngSwitchDefault>Please Choose</h3> "),e._UZ(24,"br"),e._uU(25," <h3 *ngSwitchCase=\"'fridge'\">fridge</h3> "),e._UZ(26,"br"),e._uU(27," <h3 *ngSwitchCase=\"'TV'\">TV</h3> "),e._UZ(28,"br"),e._uU(29," </div> "),e.qZA(),e.TgZ(30,"p"),e._uU(31,' choose=""; '),e._UZ(32,"br"),e._uU(33," fun(val:any){ "),e._UZ(34,"br"),e._uU(35," this.choose=val.target.value; "),e._UZ(36,"br"),e._uU(37," } "),e.qZA()(),e.TgZ(38,"strong"),e._uU(39,"Here's an example of how to use *ngSwitch:"),e.qZA(),e._UZ(40,"iframe",2))}}),t})()},{path:"ngfor",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-ngfor"]],decls:15,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/nThi4BDAv84cHD2ersZ2","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"ngFor"),e.qZA(),e.TgZ(3,"ol")(4,"li"),e._uU(5," NgFor is a structual directive means, it change the structure of the DOM "),e.qZA(),e.TgZ(6,"li"),e._uU(7," It's point is to repeat a given HTML template once for each value in an array, each time passing it the array value as context for string interpolation or binding. "),e.qZA(),e.TgZ(8,"li"),e._uU(9,' The syntax is *ngFor="let <value> of <collection>" '),e.qZA(),e.TgZ(10,"li"),e._uU(11," <value> is a variable name of your choosing, <collection> is property on your component which holds a collection, usually an array but anything that can be iterated over in a for loop. "),e.qZA()()(),e.TgZ(12,"strong"),e._uU(13,"Here's an example of how to use *ngFor:"),e.qZA(),e._UZ(14,"iframe",2))}}),t})()},{path:"routing",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-routing"]],decls:17,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://stackblitz.com/edit/angular-router-basic-example-ek2bty?file=app%2Fapp.component.ts","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Routing"),e.qZA(),e.TgZ(3,"ul")(4,"li"),e._uU(5," Routing is mechanism used by angular for navigating between page and displaying appropriated component /page on browser. "),e.qZA(),e.TgZ(6,"li"),e._uU(7," Angular framework is mainly focused and good for the SPA (Single Pge Architecture). It loads a single full HTML page and dynamically loads or updates the partial pages as per user request. And, that is achieved with the help of router. A set of partial loading rule and urls is defined in router to render or load partial pages based on user request. "),e.qZA(),e.TgZ(8,"li"),e._uU(9," Angular routing helps navigation across the application from one view to another view. It also allows us to maintain the state, implement modules, and load the modules based on the role of the user. "),e.qZA(),e.TgZ(10,"li"),e._uU(11," In component based architecture of angular 5, Angular looks into the routes array, match the path as per the route requested and loads the component relevant to the requested route as well as makes available the relevant data for that particular route. "),e.qZA(),e.TgZ(12,"li"),e._uU(13," Angular provides an easy way to create and work with components, in a single page application(SPA) it is essential to with multiple views/screens, navigate and communicate between them. Angular provides router service to manage this in a very easy way. "),e.qZA(),e.TgZ(14,"li"),e._uU(15," An Angular application that uses Angular Router only has one router service service instance: It's a singleton. Whenever and whenever you inject the Router service in your application, you'll get access to the same Angular Router service instance "),e.qZA()()(),e._UZ(16,"iframe",2))}}),t})()},{path:"style-routing",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-style-routing"]],decls:2,vars:0,template:function(n,i){1&n&&(e.TgZ(0,"p"),e._uU(1,"style-routing works!"),e.qZA())}}),t})()},{path:"nested-child-routes",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-nested-child-routes"]],decls:2,vars:0,template:function(n,i){1&n&&(e.TgZ(0,"p"),e._uU(1,"nested-child-routes works!"),e.qZA())}}),t})()},{path:"navigating-routes-programatically",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-navigating-routes-programatically"]],decls:2,vars:0,template:function(n,i){1&n&&(e.TgZ(0,"p"),e._uU(1,"navigating-routes-programatically works!"),e.qZA())}}),t})()},{path:"input-output",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-input-output"]],decls:6,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/DmQqKR5CPizM5YVKZs3Z","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Input & Output"),e.qZA(),e.TgZ(3,"p"),e._uU(4," @Input and @Output decorators are used to establish communication between components by allowing the passing of data from a parent component to a child component (using @Input) and from a child component to a parent component (using @Output). "),e.qZA(),e._UZ(5,"iframe",2),e.qZA())}}),t})()},{path:"component-lifecycle-hook",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-component-lifecycle-hook"]],decls:38,vars:0,consts:[[1,"contentBox"],[1,"heading"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Component Life Cycle Hook"),e.qZA(),e.TgZ(3,"p"),e._uU(4,"Component lifecycle hooks in Angular allow you to tap into different stages of a component's lifecycle and perform actions accordingly. Here are the main component lifecycle hooks available in Angular:"),e.qZA(),e.TgZ(5,"ol")(6,"li")(7,"strong"),e._uU(8,"ngOnChanges():"),e.qZA(),e._uU(9," Called when any data-bound input properties of a component change. It receives a SimpleChanges object containing the previous and current values of the changed properties. "),e.qZA(),e.TgZ(10,"li")(11,"strong"),e._uU(12,"ngOnInit():"),e.qZA(),e._uU(13," Called once after the component is initialized and the input properties are set. It is commonly used for initialization tasks such as retrieving data from a service. "),e.qZA(),e.TgZ(14,"li")(15,"strong"),e._uU(16,"ngDoCheck():"),e.qZA(),e._uU(17," Called during every change detection cycle, allowing you to implement custom change detection logic. Use this hook with caution as it can affect performance if not used properly. "),e.qZA(),e.TgZ(18,"li")(19,"strong"),e._uU(20,"ngAfterContentInit():"),e.qZA(),e._uU(21," Called after the component's content (transcluded or projected content) has been initialized. "),e.qZA(),e.TgZ(22,"li")(23,"strong"),e._uU(24,"ngAfterContentChecked():"),e.qZA(),e._uU(25," Called after the component's content has been checked for changes. "),e.qZA(),e.TgZ(26,"li")(27,"strong"),e._uU(28,"ngAfterViewInit():"),e.qZA(),e._uU(29," Called after the component's view and its child views have been initialized. "),e.qZA(),e.TgZ(30,"li")(31,"strong"),e._uU(32," ngAfterViewChecked(): "),e.qZA(),e._uU(33," Called after the component's view and its child views have been checked for changes. "),e.qZA(),e.TgZ(34,"li")(35,"strong"),e._uU(36,"ngOnDestroy():"),e.qZA(),e._uU(37," Called just before the component is destroyed and removed from the DOM. It is used for cleanup tasks such as unsubscribing from observables or clearing intervals. "),e.qZA()()())}}),t})()},{path:"viewchild",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-viewchild"]],decls:4,vars:0,consts:[[1,"contentBox"],["src","https://ng-run.com/edit/HhXgEzCbaby4BTJoTTaA","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2"),e._uU(2," @View child"),e.qZA(),e._UZ(3,"iframe",1),e.qZA())}}),t})()},{path:"renderer",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-renderer"]],decls:6,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/ZWnTLvsVTjDnrRNyRyIy","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Renderer"),e.qZA(),e.TgZ(3,"p"),e._uU(4," Renderer2 class is a utility class provided by the Angular framework that allows you to interact with the DOM (Document Object Model) and perform various operations such as element creation, manipulation, and styling. It provides a platform-independent way to modify the DOM and is commonly used when you need to perform DOM manipulations that are not covered by Angular's data binding or declarative templates. "),e.qZA()(),e._UZ(5,"iframe",2))}}),t})()},{path:"pipes",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-pipes"]],decls:117,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/hVWrFG2Ch8HP93xpAeHB","frameborder","0","width","100%","height","500px"],["src","https://ng-run.com/edit/I7B7s7GwXGTf9saSL8FM","frameborder","0","width","100%","height","500px"],["src","https://ng-run.com/edit/ccWE2mlOSVlPM8KIQK1a","frameborder","0","width","100%","height","500px"],["src","https://ng-run.com/edit/qv7ykQMULAN8p8ba640I","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2,"Pipes"),e.qZA(),e.TgZ(3,"ol")(4,"li"),e._uU(5," Angular Pipes can be used to transform data to desired output. "),e.qZA(),e.TgZ(6,"li"),e._uU(7," Pipes takes in a data input and transforms data to a different output. "),e.qZA(),e.TgZ(8,"li"),e._uU(9," Using the Pipe operator (|), we can apply the Pipe's features to any of the property in our Angular Project. "),e.qZA(),e.TgZ(10,"li"),e._uU(11," Pipes (|) in Angular are used to transform the data before displaying it in a browser. Angular provides a lot of built-in pipes to translate the data before displaying it into the browser and as we know, Angular lets us extend its feature, we can even create custom pipes in Angular. "),e.qZA(),e.TgZ(12,"li"),e._uU(13,' For example, pipe can take "Learn Angular" as input and transform to "LEARN ANGULAR" in capital or you can give input as "100" which you want to display (transform) as "100.00 $" on UI. '),e.qZA(),e.TgZ(14,"li"),e._uU(15," syntaxes are written inside HTML "),e._UZ(16,"br"),e._uU(17," Input Data-------------------------\x3eFilter---------------------\x3eFinal output { {'Test' |uppercase} }---------------\x3eTEST "),e.qZA(),e.TgZ(18,"li")(19,"strong"),e._uU(20,"Types of Pipes"),e.qZA(),e.TgZ(21,"ol")(22,"li"),e._uU(23," Built-In Pipes "),e.qZA(),e.TgZ(24,"li"),e._uU(25," Parameterized Pipes "),e.qZA(),e.TgZ(26,"li"),e._uU(27," Chaining Pipes "),e.qZA(),e.TgZ(28,"li"),e._uU(29," Custom Pipes "),e.qZA()()()(),e.TgZ(30,"h2",1),e._uU(31,"String Pipe"),e.qZA(),e.TgZ(32,"ol")(33,"li")(34,"strong"),e._uU(35,"Uppercase:"),e.qZA(),e._uU(36," Converts the string type data to upper case in the UI. "),e.qZA(),e.TgZ(37,"li")(38,"strong"),e._uU(39,"Lowercase:"),e.qZA(),e._uU(40," Converts the string type data to lower case in the UI. "),e.qZA(),e.TgZ(41,"li")(42,"strong"),e._uU(43,"Titlecase:"),e.qZA(),e._uU(44," Converts the string type data in which the first alphabet of each word is made capital and the rest will be in the small case. "),e.qZA(),e.TgZ(45,"li")(46,"strong"),e._uU(47,"Slice:"),e.qZA(),e._uU(48," <starting index> It works on string fields or Array. It slices the input from the index till the end of the string or array length. "),e.qZA(),e.TgZ(49,"li")(50,"strong"),e._uU(51," Slice:"),e.qZA(),e._uU(52," <starting index>:<end index> It workson string fields or array, It slices the input from the starting index to the end index. (excluding the end index) "),e.qZA()(),e.TgZ(53,"strong"),e._uU(54,"Here's an example of how to use String Pipe:"),e.qZA(),e._UZ(55,"iframe",2),e.TgZ(56,"h2"),e._uU(57,"Parameterized Pipe"),e.qZA(),e.TgZ(58,"ol")(59,"li"),e._uU(60," We can pass any number of paramters to the pipe using a colon (:) "),e.qZA(),e.TgZ(61,"li"),e._uU(62," data | pipeName: parameter 1 : parameter 2 : parameter 3 ... : parameter n "),e.qZA(),e.TgZ(63,"li")(64,"strong"),e._uU(65,"Syntax"),e.qZA(),e.TgZ(66,"p"),e._uU(67,' Date- Short:-{ {DOB | date:"short"}} '),e.qZA()(),e.TgZ(68,"li"),e._uU(69," Currency - { {salary | currency:'USD':true}} "),e.qZA()(),e.TgZ(70,"p"),e._uU(71," in .ts file "),e._UZ(72,"br"),e._uU(73," dob=new Date(1986,8,2); "),e._UZ(74,"br"),e._uU(75," salary:number=65000; "),e._UZ(76,"br")(77,"br"),e._uU(78," in .html file "),e._UZ(79,"br"),e._uU(80,' Medium: { {dob|date:"medium"}} '),e._UZ(81,"br"),e._uU(82,' Specific Format : { {dob|date:"dd/MM/yyyy"}} '),e._UZ(83,"br"),e._uU(84,' Medium Time: { {dob|date:"mediumTime"}} '),e._UZ(85,"br"),e._uU(86,' Salary :- { {salary|currency:"USD":true}} '),e.qZA(),e.TgZ(87,"strong"),e._uU(88,"Here's an example of how to use Parameterized Pipe"),e.qZA(),e._UZ(89,"iframe",3),e.TgZ(90,"h2",1),e._uU(91,"Chaining Pipe"),e.qZA(),e.TgZ(92,"ol")(93,"li"),e._uU(94," We can use multiple pipes with the same data at the same. This also referred to as chaining pipes. "),e.qZA(),e.TgZ(95,"li"),e._uU(96," data | pipe 1 | pipe 2 | pipe 3 | ....... pipe n "),e.qZA(),e.TgZ(97,"li"),e._uU(98," data | pipe 1: parameter 1: parameter 2: parameter 3 ....: parameter n | pipe 2 : parameter 1: parameter 2: parameter 3....: parameter n| pipe 3: parameter 1: parameter 2: parameter 3.... : parameter n | ....... pipe n: parameter 1: parameter 2: parameter 3.... : parameter n "),e.qZA(),e.TgZ(99,"li"),e._uU(100," .ts file "),e._UZ(101,"br"),e._uU(102," dob=new Date(1986,8,2); "),e._UZ(103,"br")(104,"br"),e._uU(105,' .html file <span> { { dob|date:"medium" | lowercase}}</span> '),e.qZA()(),e.TgZ(106,"strong"),e._uU(107,"Here's an example of how to use Chaining Pipe:"),e.qZA(),e._UZ(108,"iframe",4),e.TgZ(109,"h2",1),e._uU(110,"Custom Pipe"),e.qZA(),e.TgZ(111,"ol")(112,"li"),e._uU(113," To create a pipe in Angular 7, you have to apply the @Pipe decorator to class, which we can import from the core Angular library. "),e.qZA(),e.TgZ(114,"li"),e._uU(115," The @Pipe decorator allows you to define the pipe name that you'll use within template expressions. "),e.qZA()(),e._UZ(116,"iframe",5),e.qZA())}}),t})()},{path:"template-driven-form",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-template-driven-form"]],decls:9,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/a1qstaawVBv7JMRY3wns","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2," Template Driven Form "),e.qZA(),e.TgZ(3,"ol")(4,"li"),e._uU(5," Template driven forms are simple forms which can be used to develop forms. These are called template-driven as everything that we are going to use in a application is defined into the template that we are defining alogn with the component. "),e.qZA(),e.TgZ(6,"li"),e._uU(7," Let's see step by step how we can develop and use these forms in the application. "),e.qZA(),e._UZ(8,"iframe",2),e.qZA()())}}),t})()},{path:"reactive-form",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-reactive-form"]],decls:7,vars:0,consts:[[1,"contentBox"],[1,"heading"],["src","https://ng-run.com/edit/PlWW848CQpLqLyx4H9Vh","frameborder","0","width","100%","height","500px"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0),e._uU(1,"` "),e.TgZ(2,"h2",1),e._uU(3,"Reactive Forms"),e.qZA(),e.TgZ(4,"p"),e._uU(5," Reactive Forms in Angular allow you to create and handle forms in a flexible and intuitive way. "),e.qZA()(),e._UZ(6,"iframe",2))}}),t})()},{path:"modules",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-modules"]],decls:24,vars:0,consts:[[1,"contentBox"],[1,"heading"]],template:function(n,i){1&n&&(e.TgZ(0,"div",0)(1,"h2",1),e._uU(2," Modules "),e.qZA(),e.TgZ(3,"p"),e._uU(4," Modules play a crucial role in organizing and structuring an application. Modules are containers for different components, services, directives, and other code related to a specific feature or functionality. They help in managing the application's dependencies, code encapsulation, and separation of concerns. "),e.qZA(),e.TgZ(5,"strong"),e._uU(6,"Here are the main types of modules in Angular:"),e.qZA(),e.TgZ(7,"ul")(8,"li")(9,"strong"),e._uU(10,"Root Module (AppModule): "),e.qZA(),e._uU(11," The root module, often referred to as AppModule, is the entry point of an Angular application. It is responsible for bootstrapping the application and importing other modules. The root module is created automatically when you generate a new Angular project using the Angular CLI. "),e.qZA(),e.TgZ(12,"li")(13,"strong"),e._uU(14,"Feature Modules:"),e.qZA(),e._uU(15," Feature modules are used to group related components, services, and other code that are dedicated to a specific feature or functionality within the application. Feature modules promote modularity and reusability by encapsulating the functionality within a separate module. These modules can be created manually using the Angular CLI or generated using schematics. "),e.qZA(),e.TgZ(16,"li")(17,"strong"),e._uU(18,"Shared Modules: "),e.qZA(),e._uU(19," Shared modules contain components, directives, pipes, and services that are shared across multiple feature modules. They help in promoting code reusability by encapsulating common functionality. Shared modules are typically used to export and share commonly used components, directives, and services among multiple modules. "),e.qZA(),e.TgZ(20,"li")(21,"strong"),e._uU(22," Core Module:"),e.qZA(),e._uU(23," The core module is a special module that contains singleton services and other components that are used across the application but not shared with external modules. It is responsible for providing application-wide services, initialization logic, and global configurations. The core module helps in keeping the root module clean and focused on the bootstrap process. "),e.qZA()()())}}),t})()},{path:"lazy-loading",component:(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["app-lazy-loading"]],decls:2,vars:0,template:function(n,i){1&n&&(e.TgZ(0,"p"),e._uU(1,"lazy-loading works!"),e.qZA())}}),t})()}]}];let m=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[r.Bz.forChild(u),r.Bz]}),t})(),d=(()=>{class t{}return t.\u0275fac=function(n){return new(n||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[p.ez,m]}),t})()}}]);